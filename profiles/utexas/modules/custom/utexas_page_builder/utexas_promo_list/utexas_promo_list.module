<?php
/**
 * @file
 * Custom field definition for the Promo List form element.
 */


/**
 * Implements hook_field_info().
 *
 * Defines the Promo List field.
 */
function utexas_promo_list_field_info() {
  return array(
    'utexas_promo_list' => array(
      'label' => t('Promo List'),
      'description' => t('This field stores information about promo lists'),
      'settings' => array(),
      'instance_settings' => array(),
      'default_widget' => 'utexas_promo_list',
      'default_formatter' => 'utexas_promo_list',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 *
 * Defines two widgets for the Promo List.
 */
function utexas_promo_list_field_widget_info() {
  return array(
    'utexas_promo_list' => array(
      'label' => t('Promo List'),
      'field types' => array('utexas_promo_list'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 *
 * Defines one formatter for the promo list
 * Field.
 */
function utexas_promo_list_field_formatter_info() {
  return array(
    'utexas_promo_list' => array(
      'label' => t('Promo List'),
      'field types' => array('utexas_promo_list'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 *
 * Defines forms for the Promo List.
 */
function utexas_promo_list_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  switch ($instance['widget']['type']) {

    case 'utexas_promo_list':

      // Headline.
      $element['headline'] = array(
        '#type' => 'textfield',
        '#title' => t('Headline'),
        '#size' => 60,
        '#maxlength' => 100,
        '#default_value' => (isset($items[$delta]['headline'])) ? $items[$delta]['headline'] : '',
      );

      // Image upload input.
      $element['image'] = array(
        '#type' => 'media',
        '#title' => t('Promo List Image'),
        '#tree' => TRUE,
        '#field_name' => 'utexas_promo_list_image',
        '#description' => t('Upload an image, or select one from the library. Image will be scaled and cropped to 170 x 170. Upload an image with an aspect ratio equal to 170 x 170 to avoid image cropping.'),
        '#extended' => TRUE,
        '#media_options' => array(
          'global' => array(
            'file_extensions' => 'gif png jpg jpeg',
            'file_directory' => 'promo-lists',
            'types' => array('image'),
          ),
        ),
        '#default_value' => array('fid' => isset($items[$delta]['image_fid']) ? $items[$delta]['image_fid'] : 0),
      );

      // Copy.
      $element['copy'] = array(
        '#type' => 'text_format',
        '#title' => t('Copy'),
        '#wysiwyg' => FALSE,
        '#default_value' => (isset($items[$delta]['copy_value'])) ? $items[$delta]['copy_value'] : '',
        '#format' => (isset($items[$delta]['copy_format'])) ? $items[$delta]['copy_format'] : NULL,
      );

      // Link.
      $link = '';
      if (isset($items[$delta]['link'])) {
        if (trim($items[$delta]['link']) != '') {
          $link = drupal_get_path_alias($items[$delta]['link']);
        }
      }

      $element['link'] = array(
        '#type' => 'textfield',
        '#title' => t('Link'),
        '#description' => t('A valid URL for this promo list. If present, the item headline and image will become links.'),
        '#size' => 60,
        '#maxlength' => 2048,
        '#default_value' => $link,
        '#attributes' => array(
          'placeholder' => 'external URL (http://) or internal path (e.g., about/diversity)',
        ),
      );

      break;

  }
  return $element;
}

/**
 * Implements hook_field_validate().
 *
 * Used to make sure all fields have valid data in them.
 */
function utexas_promo_list_field_validate($entity_type, $entity, $field,
  $instance, $langcode, $items, &$errors) {
  // Loop through the values, making sure all check out.
  foreach ($items as $delta => $item) {
    if (!empty($item) and !utexas_promo_list_field_is_empty($item, $field)) {

      // Make sure link is valid.
      $target = drupal_get_normal_path($item['link']);
      if (!empty($item['link']) and !drupal_valid_path($target)) {
        $errors[$field['field_name']][$langcode][$delta][] = array(
          'error' => 'link_invalid',
          'message' => t('%link: The path provided is not a valid URL alias or external link..', array('%link' => $instance['label'])),
        );
      }
    }
  }
}

/**
 * Implements hook_field_widget_error().
 *
 * Applies sub-field errors to individual form elements.
 */
function utexas_promo_list_field_widget_error($element, $error, $form, &$form_state) {
  // Set sub-field errors.
  switch ($error['error']) {

    case 'link_invalid':
      form_error($element['link'], $error['message']);
      break;

  }
}

/**
 * Implements hook_field_presave().
 *
 * Adjust copy format+value and handle images.
 */
function utexas_promo_list_field_presave($entity_type, $entity, $field,
  $instance, $langcode, &$items) {
  // Throw copy format & copy value into separate files & adjust other values.
  foreach ($items as $delta => &$item) {

    $item['image_fid'] = isset($item['image']['fid']) ? $item['image']['fid'] : $item['image_fid'];
    if (empty($item['image_fid'])) {
      $item['image_fid'] = 0;
    }

    unset($item['image']);

    if (!empty($item['link'])) {
      // Store Drupal path aliases as internal paths, if they exist.
      $item['link'] = drupal_get_normal_path($item['link']);
    }

    // Split copy into two columns, 'copy_format' and 'copy_value'.
    $item['copy_format'] = isset($item['copy']['format']) ? $item['copy']['format'] : $item['copy_format'];
    $item['copy_value'] = isset($item['copy']['value']) ? $item['copy']['value'] : $item['copy_value'];
    unset($item['copy']);

    // Provide informative messages about possibly misleading populated fields.
    if (!empty($item['link']) && empty($item['copy_value']) && empty($item['image_fid'])) {
      drupal_set_message(t('Note: one of the Promo Lists has a link still defined, but since no other fields have values, nothing will be displayed.'));
    }

  }
}

/**
 * Implements hook_file_download().
 *
 * Checks access to make sure users can actually use
 * the files that have been uploaded. Required since Drupal 7.29.
 */
function utexas_promo_list_file_download($uri) {
  if (strpos(file_uri_target($uri), 'promo-lists') === 0) {
    $info = image_get_info($uri);
    return array('Content-Type' => $info['mime_type']);
  }

  return NULL;
}

/**
 * Implements hook_field_insert().
 *
 * Increment file usage.
 */
function utexas_promo_list_field_insert($entity_type, $entity, $field,
  $instance, $langcode, &$items) {
  utexas_admin_field_insert_custom($entity_type, $entity, $field,
  $instance, $langcode, $items, 'utexas_promo_list');
}


/**
 * Implements hook_field_update().
 *
 * Adjust copy format+value and handle images.
 */
function utexas_promo_list_field_update($entity_type, $entity, $field,
  $instance, $langcode, &$items) {
  utexas_admin_field_update_custom($entity_type, $entity, $field,
  $instance, $langcode, $items, 'utexas_promo_list');
}

/**
 * Implements hook_field_delete().
 *
 * Cleans up any remaining files, if they have not been deleted already.
 */
function utexas_promo_list_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items) {
  utexas_admin_field_delete_custom($entity_type, $entity, $field, $instance, $langcode, $items, 'utexas_promo_list');
}

/**
 * Implements hook_field_is_empty().
 */
function utexas_promo_list_field_is_empty($item, $field) {
  switch ($field['type']) {
    case 'utexas_promo_list':
      return empty($item['headline'])
      and empty($item['copy']['value'])
      and empty($item['link'])
      and empty($item['image']['fid']);
  }

  return FALSE;
}

/**
 * Implements hook_field_formatter_view().
 *
 * Builds the formatter view for the Promo List.
 */
function utexas_promo_list_field_formatter_view($entity_type, $entity,
  $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  switch ($display['type']) {
    case 'utexas_promo_list':
      foreach ($items as $delta => $item) {
        $element[] = array(
          '#type' => 'markup',
          '#markup' => theme('utexas_promo_list', $item),
          '#attached' => array(
            'css' => array(drupal_get_path('module', 'utexas_promo_list')
              . '/theme/utexas_promo_list.css'),
          ),
        );
      }

      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 *
 * Register the Promo List.
 */
function utexas_promo_list_theme($existing, $type, $theme, $path) {
  return array(
    'utexas_promo_list' => array(
      'variables' => array(
        'headline' => NULL,
        'image_fid' => NULL,
        'copy_format' => NULL,
        'copy_value' => NULL,
        'link' => NULL,
      ),
      'template' => 'theme/utexas-promo-list',
    ),
  );
}

/**
 * Implements hook_image_default_styles().
 *
 * Defines image styles for promo field images for promo units & promo lists.
 */
function utexas_promo_list_image_default_styles() {
  return array(
    'utexas_promo_list_image' => array(
      'label' => t('Promo List Image'),
      'effects' => array(
        array(
          'name' => 'smartcrop_scale_and_crop',
          'data' => array(
            'width' => 170,
            'height' => 170,
            'upscale' => FALSE,
          ),
          'weight' => 0,
        ),
      ),
    ),
  );
}

/**
 * Theme preprocess function for promo lists.
 *
 * @see utexas-promo-list.tpl.php
 */
function template_preprocess_utexas_promo_list(&$variables) {
  // Attach some theme hook suggestions to override individual promo units.
  $variables['theme_hook_suggestions'] = array(
    'utexas-promo-list',
    'utexas-promo-list--' . $variables['id'],
  );

  // Replace the copy variables with the formatted copy.
  $variables['copy'] = (!empty($variables['copy_value'])) ? check_markup($variables['copy_value'], $variables['copy_format']) : FALSE;

  // Get an image loaded.
  if (!empty($variables['image_fid'])) {
    if ($file = file_load($variables['image_fid'])) {
      $alt = isset($file->field_file_image_alt_text['und'][0]['safe_value']) ? $alt = $file->field_file_image_alt_text['und'][0]['safe_value'] : '';
      $title = isset($file->field_file_image_title_text['und'][0]['safe_value']) ? $title = $file->field_file_image_title_text['und'][0]['safe_value'] : '';
      $info = image_get_info($file->uri);
      $image = theme('image_style', array(
        'style_name' => 'utexas_promo_list_image',
        'path' => $file->uri,
        'width' => $info['width'],
        'height' => $info['height'],
        'alt' => $alt,
        'title' => $title,
        'attributes' => array('class' => array('promo-image')),
      ));

      // Wrap a link around the image, if there is one.
      if (!empty($variables['link'])) {
        $image = l($image, $variables['link'], array('html' => TRUE, 'attributes' => array('class' => array('promo-utexas-image-link'))));
      }
    }
  }

  // Set the image variable to pass to the template.
  $variables['image'] = (isset($image)) ? $image : FALSE;

  // Get a link-ified headline, if necessary.
  if (!empty($variables['headline'])) {
    if (!empty($variables['link'])) {
      $variables['headline'] = l('<span>' . $variables['headline'] . '</span>', $variables['link'], array(
        'attributes' => array(
          'class' => array('cta-link', 'promo-list-cta'),
        ),
        'html' => TRUE,
      ));
    }
  }
  else {
    $variables['headline'] = FALSE;
  }
}

/**
 * Implements template_preprocess_entity().
 */
function utexas_promo_list_preprocess_entity(&$variables, $hook) {
  $function = 'utexas_promo_list_preprocess_promo_list_item';
  if (isset($variables['field_utexas_promo_list_item']) && function_exists($function)) {
    $function($variables, $hook);
  }
}

/**
 * Field Collection-specific implementation of template_preprocess_entity().
 */
function utexas_promo_list_preprocess_promo_list_item(&$variables) {
  // Set default style type, in case the user has entered N/A.
  // This equates to choosing " Two lists, side-by-side".
  $variables['promo_list_style'] = 'one-column small-12 large-6 end';
  $variables['promo_list_class'] = '';

  if (isset($variables['field_utexas_promo_list_style'][0]['value'])) {
    if ($variables['field_utexas_promo_list_style'][0]['value'] == 'Single list responsive (2 items per row)') {
      $variables['promo_list_style'] = 'two-column';
      $variables['promo_list_class'] = 'columns small-12 large-6 end';
    }
    elseif ($variables['field_utexas_promo_list_style'][0]['value'] == 'Single list full (1 item per row)') {
      $variables['promo_list_style'] = 'one-column-full-width small-12 end ';
    }
  }
}
